/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.widget.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.dana.widget.v1.model.Money;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Information about the refund promotion that was applied
 */
@JsonPropertyOrder({
  RefundPromoInfo.JSON_PROPERTY_PROMO_ID,
  RefundPromoInfo.JSON_PROPERTY_PROMO_NAME,
  RefundPromoInfo.JSON_PROPERTY_PROMO_TYPE,
  RefundPromoInfo.JSON_PROPERTY_REFUND_AMOUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class RefundPromoInfo {
  public static final String JSON_PROPERTY_PROMO_ID = "promoId";
  @javax.annotation.Nonnull
  private String promoId;

  public static final String JSON_PROPERTY_PROMO_NAME = "promoName";
  @javax.annotation.Nonnull
  private String promoName;

  /**
   * Type of promotion
   */
  public enum PromoTypeEnum {
    CASH_BACK(String.valueOf("CASH_BACK")),
    
    DISCOUNT(String.valueOf("DISCOUNT")),
    
    VOUCHER(String.valueOf("VOUCHER")),
    
    POINT(String.valueOf("POINT")),
    
    /**
     * To handle empty string value
     */
    UNSPECIFIED(String.valueOf(""));

    private String value;

    PromoTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PromoTypeEnum fromValue(String value) {
      for (PromoTypeEnum b : PromoTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
  public static final String JSON_PROPERTY_PROMO_TYPE = "promoType";
  @javax.annotation.Nonnull
  private PromoTypeEnum promoType;

  public static final String JSON_PROPERTY_REFUND_AMOUNT = "refundAmount";
  @javax.annotation.Nonnull
  private Money refundAmount;

  public RefundPromoInfo() {
  }

  public RefundPromoInfo promoId(@javax.annotation.Nonnull String promoId) {
    
    this.promoId = promoId;
    return this;
  }

  /**
   * Promotion identifier
   * @return promoId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROMO_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPromoId() {
    return promoId;
  }


  @JsonProperty(JSON_PROPERTY_PROMO_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPromoId(@javax.annotation.Nonnull String promoId) {
    this.promoId = promoId;
  }

  public RefundPromoInfo promoName(@javax.annotation.Nonnull String promoName) {
    
    this.promoName = promoName;
    return this;
  }

  /**
   * Promotion name
   * @return promoName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROMO_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPromoName() {
    return promoName;
  }


  @JsonProperty(JSON_PROPERTY_PROMO_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPromoName(@javax.annotation.Nonnull String promoName) {
    this.promoName = promoName;
  }

  public RefundPromoInfo promoType(@javax.annotation.Nonnull PromoTypeEnum promoType) {
    
    this.promoType = promoType;
    return this;
  }

  /**
   * Type of promotion
   * @return promoType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROMO_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PromoTypeEnum getPromoType() {
    return promoType;
  }


  @JsonProperty(JSON_PROPERTY_PROMO_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPromoType(@javax.annotation.Nonnull PromoTypeEnum promoType) {
    this.promoType = promoType;
  }

  public RefundPromoInfo refundAmount(@javax.annotation.Nonnull Money refundAmount) {
    
    this.refundAmount = refundAmount;
    return this;
  }

  /**
   * Refund amount from this promotion. Contains value (amount including cents) and currency (code based on ISO)
   * @return refundAmount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REFUND_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Money getRefundAmount() {
    return refundAmount;
  }


  @JsonProperty(JSON_PROPERTY_REFUND_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRefundAmount(@javax.annotation.Nonnull Money refundAmount) {
    this.refundAmount = refundAmount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RefundPromoInfo refundPromoInfo = (RefundPromoInfo) o;
    return Objects.equals(this.promoId, refundPromoInfo.promoId) &&
        Objects.equals(this.promoName, refundPromoInfo.promoName) &&
        Objects.equals(this.promoType, refundPromoInfo.promoType) &&
        Objects.equals(this.refundAmount, refundPromoInfo.refundAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(promoId, promoName, promoType, refundAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RefundPromoInfo {\n");
    sb.append("    promoId: ").append(toIndentedString(promoId)).append("\n");
    sb.append("    promoName: ").append(toIndentedString(promoName)).append("\n");
    sb.append("    promoType: ").append(toIndentedString(promoType)).append("\n");
    sb.append("    refundAmount: ").append(toIndentedString(refundAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
