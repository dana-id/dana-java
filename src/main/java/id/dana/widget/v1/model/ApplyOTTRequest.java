/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.widget.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.dana.widget.v1.model.ApplyOTTRequestAdditionalInfo;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ApplyOTTRequest
 */
@JsonPropertyOrder({
  ApplyOTTRequest.JSON_PROPERTY_USER_RESOURCES,
  ApplyOTTRequest.JSON_PROPERTY_ADDITIONAL_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class ApplyOTTRequest {
  /**
   * Value always One Time Token ( OTT)
   */
  public enum UserResourcesEnum {
    /**
     * Value always One Time Token ( OTT)
     */
    OTT(String.valueOf("OTT")),
    
    /**
     * To handle empty string value
     */
    UNSPECIFIED(String.valueOf(""));

    private String value;

    UserResourcesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UserResourcesEnum fromValue(String value) {
      for (UserResourcesEnum b : UserResourcesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
  public static final String JSON_PROPERTY_USER_RESOURCES = "userResources";
  @javax.annotation.Nonnull
  private List<UserResourcesEnum> userResources = new ArrayList<>();

  public static final String JSON_PROPERTY_ADDITIONAL_INFO = "additionalInfo";
  @javax.annotation.Nonnull
  private ApplyOTTRequestAdditionalInfo additionalInfo;

  public ApplyOTTRequest() {
  }

  public ApplyOTTRequest userResources(@javax.annotation.Nonnull List<UserResourcesEnum> userResources) {
    
    this.userResources = userResources;
    return this;
  }

  public ApplyOTTRequest addUserResourcesItem(UserResourcesEnum userResourcesItem) {
    if (this.userResources == null) {
      this.userResources = new ArrayList<>();
    }
    this.userResources.add(userResourcesItem);
    return this;
  }

  /**
   * Get userResources
   * @return userResources
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<UserResourcesEnum> getUserResources() {
    return userResources;
  }


  @JsonProperty(JSON_PROPERTY_USER_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserResources(@javax.annotation.Nonnull List<UserResourcesEnum> userResources) {
    this.userResources = userResources;
  }

  public ApplyOTTRequest additionalInfo(@javax.annotation.Nonnull ApplyOTTRequestAdditionalInfo additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

  /**
   * Get additionalInfo
   * @return additionalInfo
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ApplyOTTRequestAdditionalInfo getAdditionalInfo() {
    return additionalInfo;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdditionalInfo(@javax.annotation.Nonnull ApplyOTTRequestAdditionalInfo additionalInfo) {
    this.additionalInfo = additionalInfo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplyOTTRequest applyOTTRequest = (ApplyOTTRequest) o;
    return Objects.equals(this.userResources, applyOTTRequest.userResources) &&
        Objects.equals(this.additionalInfo, applyOTTRequest.additionalInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userResources, additionalInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplyOTTRequest {\n");
    sb.append("    userResources: ").append(toIndentedString(userResources)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
