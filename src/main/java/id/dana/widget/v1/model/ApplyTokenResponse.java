/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.widget.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.dana.widget.v1.model.ApplyTokenResponseAdditionalInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ApplyTokenResponse
 */
@JsonPropertyOrder({
  ApplyTokenResponse.JSON_PROPERTY_RESPONSE_CODE,
  ApplyTokenResponse.JSON_PROPERTY_RESPONSE_MESSAGE,
  ApplyTokenResponse.JSON_PROPERTY_TOKEN_TYPE,
  ApplyTokenResponse.JSON_PROPERTY_ACCESS_TOKEN,
  ApplyTokenResponse.JSON_PROPERTY_ACCESS_TOKEN_EXPIRY_TIME,
  ApplyTokenResponse.JSON_PROPERTY_REFRESH_TOKEN,
  ApplyTokenResponse.JSON_PROPERTY_REFRESH_TOKEN_EXPIRY_TIME,
  ApplyTokenResponse.JSON_PROPERTY_ADDITIONAL_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class ApplyTokenResponse {
  public static final String JSON_PROPERTY_RESPONSE_CODE = "responseCode";
  @javax.annotation.Nonnull
  private String responseCode;

  public static final String JSON_PROPERTY_RESPONSE_MESSAGE = "responseMessage";
  @javax.annotation.Nonnull
  private String responseMessage;

  public static final String JSON_PROPERTY_TOKEN_TYPE = "tokenType";
  @javax.annotation.Nullable
  private String tokenType;

  public static final String JSON_PROPERTY_ACCESS_TOKEN = "accessToken";
  @javax.annotation.Nonnull
  private String accessToken;

  public static final String JSON_PROPERTY_ACCESS_TOKEN_EXPIRY_TIME = "accessTokenExpiryTime";
  @javax.annotation.Nullable
  private String accessTokenExpiryTime;

  public static final String JSON_PROPERTY_REFRESH_TOKEN = "refreshToken";
  @javax.annotation.Nullable
  private String refreshToken;

  public static final String JSON_PROPERTY_REFRESH_TOKEN_EXPIRY_TIME = "refreshTokenExpiryTime";
  @javax.annotation.Nullable
  private String refreshTokenExpiryTime;

  public static final String JSON_PROPERTY_ADDITIONAL_INFO = "additionalInfo";
  @javax.annotation.Nullable
  private ApplyTokenResponseAdditionalInfo additionalInfo;

  public ApplyTokenResponse() {
  }

  public ApplyTokenResponse responseCode(@javax.annotation.Nonnull String responseCode) {
    
    this.responseCode = responseCode;
    return this;
  }

  /**
   * Response code. Refer to https://dashboard.dana.id/api-docs/read/110#HTML-ApplyToken-ResponseCodeandMessage
   * @return responseCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResponseCode() {
    return responseCode;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResponseCode(@javax.annotation.Nonnull String responseCode) {
    this.responseCode = responseCode;
  }

  public ApplyTokenResponse responseMessage(@javax.annotation.Nonnull String responseMessage) {
    
    this.responseMessage = responseMessage;
    return this;
  }

  /**
   * Response message. Refer to https://dashboard.dana.id/api-docs/read/110#HTML-ApplyToken-ResponseCodeandMessage
   * @return responseMessage
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESPONSE_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResponseMessage() {
    return responseMessage;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResponseMessage(@javax.annotation.Nonnull String responseMessage) {
    this.responseMessage = responseMessage;
  }

  public ApplyTokenResponse tokenType(@javax.annotation.Nullable String tokenType) {
    
    this.tokenType = tokenType;
    return this;
  }

  /**
   * Token type. Present if successfully processed
   * @return tokenType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOKEN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTokenType() {
    return tokenType;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokenType(@javax.annotation.Nullable String tokenType) {
    this.tokenType = tokenType;
  }

  public ApplyTokenResponse accessToken(@javax.annotation.Nonnull String accessToken) {
    
    this.accessToken = accessToken;
    return this;
  }

  /**
   * This token is called Customer Token that will be used as a parameter on header in other API “Authorization-Customer”. Present if successfully processed
   * @return accessToken
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccessToken() {
    return accessToken;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccessToken(@javax.annotation.Nonnull String accessToken) {
    this.accessToken = accessToken;
  }

  public ApplyTokenResponse accessTokenExpiryTime(@javax.annotation.Nullable String accessTokenExpiryTime) {
    
    this.accessTokenExpiryTime = accessTokenExpiryTime;
    return this;
  }

  /**
   * Expiry time for access token was given to user, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time). Present if successfully processed
   * @return accessTokenExpiryTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN_EXPIRY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessTokenExpiryTime() {
    return accessTokenExpiryTime;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN_EXPIRY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessTokenExpiryTime(@javax.annotation.Nullable String accessTokenExpiryTime) {
    this.accessTokenExpiryTime = accessTokenExpiryTime;
  }

  public ApplyTokenResponse refreshToken(@javax.annotation.Nullable String refreshToken) {
    
    this.refreshToken = refreshToken;
    return this;
  }

  /**
   * This token is used for refresh session if existing token has been expired. Present if successfully processed
   * @return refreshToken
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFRESH_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRefreshToken() {
    return refreshToken;
  }


  @JsonProperty(JSON_PROPERTY_REFRESH_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRefreshToken(@javax.annotation.Nullable String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public ApplyTokenResponse refreshTokenExpiryTime(@javax.annotation.Nullable String refreshTokenExpiryTime) {
    
    this.refreshTokenExpiryTime = refreshTokenExpiryTime;
    return this;
  }

  /**
   * Expiry time for refresh token was given to user, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time). Present if successfully processed
   * @return refreshTokenExpiryTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFRESH_TOKEN_EXPIRY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRefreshTokenExpiryTime() {
    return refreshTokenExpiryTime;
  }


  @JsonProperty(JSON_PROPERTY_REFRESH_TOKEN_EXPIRY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRefreshTokenExpiryTime(@javax.annotation.Nullable String refreshTokenExpiryTime) {
    this.refreshTokenExpiryTime = refreshTokenExpiryTime;
  }

  public ApplyTokenResponse additionalInfo(@javax.annotation.Nullable ApplyTokenResponseAdditionalInfo additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

  /**
   * Additional information
   * @return additionalInfo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApplyTokenResponseAdditionalInfo getAdditionalInfo() {
    return additionalInfo;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalInfo(@javax.annotation.Nullable ApplyTokenResponseAdditionalInfo additionalInfo) {
    this.additionalInfo = additionalInfo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplyTokenResponse applyTokenResponse = (ApplyTokenResponse) o;
    return Objects.equals(this.responseCode, applyTokenResponse.responseCode) &&
        Objects.equals(this.responseMessage, applyTokenResponse.responseMessage) &&
        Objects.equals(this.tokenType, applyTokenResponse.tokenType) &&
        Objects.equals(this.accessToken, applyTokenResponse.accessToken) &&
        Objects.equals(this.accessTokenExpiryTime, applyTokenResponse.accessTokenExpiryTime) &&
        Objects.equals(this.refreshToken, applyTokenResponse.refreshToken) &&
        Objects.equals(this.refreshTokenExpiryTime, applyTokenResponse.refreshTokenExpiryTime) &&
        Objects.equals(this.additionalInfo, applyTokenResponse.additionalInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(responseCode, responseMessage, tokenType, accessToken, accessTokenExpiryTime, refreshToken, refreshTokenExpiryTime, additionalInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplyTokenResponse {\n");
    sb.append("    responseCode: ").append(toIndentedString(responseCode)).append("\n");
    sb.append("    responseMessage: ").append(toIndentedString(responseMessage)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    accessTokenExpiryTime: ").append(toIndentedString(accessTokenExpiryTime)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    refreshTokenExpiryTime: ").append(toIndentedString(refreshTokenExpiryTime)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

