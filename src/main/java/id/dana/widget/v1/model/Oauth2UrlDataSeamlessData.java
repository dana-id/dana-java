/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.widget.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Option for binding process.Please refer sample below to know how to include seamlessData
 */
@JsonPropertyOrder({
  Oauth2UrlDataSeamlessData.JSON_PROPERTY_BIZ_SCENARIO,
  Oauth2UrlDataSeamlessData.JSON_PROPERTY_MOBILE_NUMBER,
  Oauth2UrlDataSeamlessData.JSON_PROPERTY_VERIFIED_TIME,
  Oauth2UrlDataSeamlessData.JSON_PROPERTY_EXTERNAL_UID,
  Oauth2UrlDataSeamlessData.JSON_PROPERTY_DEVICE_ID,
  Oauth2UrlDataSeamlessData.JSON_PROPERTY_SKIP_REGISTER_CONSULT
})
@JsonTypeName("Oauth2UrlData_seamlessData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class Oauth2UrlDataSeamlessData {
  public static final String JSON_PROPERTY_BIZ_SCENARIO = "bizScenario";
  @javax.annotation.Nullable
  private String bizScenario;

  public static final String JSON_PROPERTY_MOBILE_NUMBER = "mobileNumber";
  @javax.annotation.Nullable
  private String mobileNumber;

  public static final String JSON_PROPERTY_VERIFIED_TIME = "verifiedTime";
  @javax.annotation.Nullable
  private String verifiedTime;

  public static final String JSON_PROPERTY_EXTERNAL_UID = "externalUid";
  @javax.annotation.Nullable
  private String externalUid;

  public static final String JSON_PROPERTY_DEVICE_ID = "deviceId";
  @javax.annotation.Nullable
  private String deviceId;

  public static final String JSON_PROPERTY_SKIP_REGISTER_CONSULT = "skipRegisterConsult";
  @javax.annotation.Nullable
  private Boolean skipRegisterConsult;

  public Oauth2UrlDataSeamlessData() {
  }

  public Oauth2UrlDataSeamlessData bizScenario(@javax.annotation.Nullable String bizScenario) {
    
    this.bizScenario = bizScenario;
    return this;
  }

  /**
   * Userâ€™s bizScenario
   * @return bizScenario
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIZ_SCENARIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBizScenario() {
    return bizScenario;
  }


  @JsonProperty(JSON_PROPERTY_BIZ_SCENARIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBizScenario(@javax.annotation.Nullable String bizScenario) {
    this.bizScenario = bizScenario;
  }

  public Oauth2UrlDataSeamlessData mobileNumber(@javax.annotation.Nullable String mobileNumber) {
    
    this.mobileNumber = mobileNumber;
    return this;
  }

  /**
   * User's phone number. If this field is filled in, the user must log in with the number that has been included
   * @return mobileNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOBILE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMobileNumber() {
    return mobileNumber;
  }


  @JsonProperty(JSON_PROPERTY_MOBILE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMobileNumber(@javax.annotation.Nullable String mobileNumber) {
    this.mobileNumber = mobileNumber;
  }

  public Oauth2UrlDataSeamlessData verifiedTime(@javax.annotation.Nullable String verifiedTime) {
    
    this.verifiedTime = verifiedTime;
    return this;
  }

  /**
   * Value which states that the mobile number that has been included in seamlessData has verified ownership and does not require OTP verification by the provider, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)
   * @return verifiedTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFIED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVerifiedTime() {
    return verifiedTime;
  }


  @JsonProperty(JSON_PROPERTY_VERIFIED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerifiedTime(@javax.annotation.Nullable String verifiedTime) {
    this.verifiedTime = verifiedTime;
  }

  public Oauth2UrlDataSeamlessData externalUid(@javax.annotation.Nullable String externalUid) {
    
    this.externalUid = externalUid;
    return this;
  }

  /**
   * User identifier on partner application
   * @return externalUid
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_UID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalUid() {
    return externalUid;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_UID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalUid(@javax.annotation.Nullable String externalUid) {
    this.externalUid = externalUid;
  }

  public Oauth2UrlDataSeamlessData deviceId(@javax.annotation.Nullable String deviceId) {
    
    this.deviceId = deviceId;
    return this;
  }

  /**
   * User's device identifier
   * @return deviceId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeviceId() {
    return deviceId;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceId(@javax.annotation.Nullable String deviceId) {
    this.deviceId = deviceId;
  }

  public Oauth2UrlDataSeamlessData skipRegisterConsult(@javax.annotation.Nullable Boolean skipRegisterConsult) {
    
    this.skipRegisterConsult = skipRegisterConsult;
    return this;
  }

  /**
   * Identifier to differentiate seamless registration flow. The possible values are true or false
   * @return skipRegisterConsult
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SKIP_REGISTER_CONSULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkipRegisterConsult() {
    return skipRegisterConsult;
  }


  @JsonProperty(JSON_PROPERTY_SKIP_REGISTER_CONSULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkipRegisterConsult(@javax.annotation.Nullable Boolean skipRegisterConsult) {
    this.skipRegisterConsult = skipRegisterConsult;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Oauth2UrlDataSeamlessData oauth2UrlDataSeamlessData = (Oauth2UrlDataSeamlessData) o;
    return Objects.equals(this.bizScenario, oauth2UrlDataSeamlessData.bizScenario) &&
        Objects.equals(this.mobileNumber, oauth2UrlDataSeamlessData.mobileNumber) &&
        Objects.equals(this.verifiedTime, oauth2UrlDataSeamlessData.verifiedTime) &&
        Objects.equals(this.externalUid, oauth2UrlDataSeamlessData.externalUid) &&
        Objects.equals(this.deviceId, oauth2UrlDataSeamlessData.deviceId) &&
        Objects.equals(this.skipRegisterConsult, oauth2UrlDataSeamlessData.skipRegisterConsult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bizScenario, mobileNumber, verifiedTime, externalUid, deviceId, skipRegisterConsult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Oauth2UrlDataSeamlessData {\n");
    sb.append("    bizScenario: ").append(toIndentedString(bizScenario)).append("\n");
    sb.append("    mobileNumber: ").append(toIndentedString(mobileNumber)).append("\n");
    sb.append("    verifiedTime: ").append(toIndentedString(verifiedTime)).append("\n");
    sb.append("    externalUid: ").append(toIndentedString(externalUid)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    skipRegisterConsult: ").append(toIndentedString(skipRegisterConsult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
