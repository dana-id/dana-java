/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.widget.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Seller
 */
@JsonPropertyOrder({
  Seller.JSON_PROPERTY_EXTERNAL_USER_TYPE,
  Seller.JSON_PROPERTY_NICKNAME,
  Seller.JSON_PROPERTY_EXTERNAL_USER_ID,
  Seller.JSON_PROPERTY_USER_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class Seller {
  public static final String JSON_PROPERTY_EXTERNAL_USER_TYPE = "externalUserType";
  @javax.annotation.Nullable
  private String externalUserType;

  public static final String JSON_PROPERTY_NICKNAME = "nickname";
  @javax.annotation.Nullable
  private String nickname;

  public static final String JSON_PROPERTY_EXTERNAL_USER_ID = "externalUserId";
  @javax.annotation.Nullable
  private String externalUserId;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nullable
  private String userId;

  public Seller() {
  }

  public Seller externalUserType(@javax.annotation.Nullable String externalUserType) {
    
    this.externalUserType = externalUserType;
    return this;
  }

  /**
   * Type of external user. Required if externalUserId is filled
   * @return externalUserType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_USER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalUserType() {
    return externalUserType;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_USER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalUserType(@javax.annotation.Nullable String externalUserType) {
    this.externalUserType = externalUserType;
  }

  public Seller nickname(@javax.annotation.Nullable String nickname) {
    
    this.nickname = nickname;
    return this;
  }

  /**
   * Nickname, user&#39;s nick name in DANA&#39;s
   * @return nickname
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NICKNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNickname() {
    return nickname;
  }


  @JsonProperty(JSON_PROPERTY_NICKNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNickname(@javax.annotation.Nullable String nickname) {
    this.nickname = nickname;
  }

  public Seller externalUserId(@javax.annotation.Nullable String externalUserId) {
    
    this.externalUserId = externalUserId;
    return this;
  }

  /**
   * External user identifier. Required if externalUserType is filled
   * @return externalUserId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalUserId() {
    return externalUserId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalUserId(@javax.annotation.Nullable String externalUserId) {
    this.externalUserId = externalUserId;
  }

  public Seller userId(@javax.annotation.Nullable String userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * DANA&#39;s user identifier
   * @return userId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Seller seller = (Seller) o;
    return Objects.equals(this.externalUserType, seller.externalUserType) &&
        Objects.equals(this.nickname, seller.nickname) &&
        Objects.equals(this.externalUserId, seller.externalUserId) &&
        Objects.equals(this.userId, seller.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalUserType, nickname, externalUserId, userId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Seller {\n");
    sb.append("    externalUserType: ").append(toIndentedString(externalUserType)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    externalUserId: ").append(toIndentedString(externalUserId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

