/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.widget.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ApplyTokenRefreshTokenRequest
 */
@JsonPropertyOrder({
  ApplyTokenRefreshTokenRequest.JSON_PROPERTY_ADDITIONAL_INFO,
  ApplyTokenRefreshTokenRequest.JSON_PROPERTY_GRANT_TYPE,
  ApplyTokenRefreshTokenRequest.JSON_PROPERTY_AUTH_CODE,
  ApplyTokenRefreshTokenRequest.JSON_PROPERTY_REFRESH_TOKEN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class ApplyTokenRefreshTokenRequest implements ApplyTokenRequest {
  public static final String JSON_PROPERTY_ADDITIONAL_INFO = "additionalInfo";
  @javax.annotation.Nullable
  private Map<String, Object> additionalInfo = new HashMap<>();

  /**
   * Apply token request type. The value is REFRESH_TOKEN
   */
  public enum GrantTypeEnum {
    REFRESH_TOKEN(String.valueOf("REFRESH_TOKEN")),
    
    UNSPECIFIED(String.valueOf(""));

    private String value;

    GrantTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GrantTypeEnum fromValue(String value) {
      for (GrantTypeEnum b : GrantTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_GRANT_TYPE = "grantType";
  @javax.annotation.Nonnull
  private GrantTypeEnum grantType;

  public static final String JSON_PROPERTY_AUTH_CODE = "authCode";
  @javax.annotation.Nullable
  private String authCode;

  public static final String JSON_PROPERTY_REFRESH_TOKEN = "refreshToken";
  @javax.annotation.Nonnull
  private String refreshToken;

  public ApplyTokenRefreshTokenRequest() {
  }

  public ApplyTokenRefreshTokenRequest additionalInfo(@javax.annotation.Nullable Map<String, Object> additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

  public ApplyTokenRefreshTokenRequest putAdditionalInfoItem(String key, Object additionalInfoItem) {
    if (this.additionalInfo == null) {
      this.additionalInfo = new HashMap<>();
    }
    this.additionalInfo.put(key, additionalInfoItem);
    return this;
  }

  /**
   * Additional information
   * @return additionalInfo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAdditionalInfo() {
    return additionalInfo;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalInfo(@javax.annotation.Nullable Map<String, Object> additionalInfo) {
    this.additionalInfo = additionalInfo;
  }

  public ApplyTokenRefreshTokenRequest grantType(@javax.annotation.Nonnull GrantTypeEnum grantType) {
    
    this.grantType = grantType;
    return this;
  }

  /**
   * Apply token request type. The value is REFRESH_TOKEN
   * @return grantType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GRANT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GrantTypeEnum getGrantType() {
    return grantType;
  }


  @JsonProperty(JSON_PROPERTY_GRANT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGrantType(@javax.annotation.Nonnull GrantTypeEnum grantType) {
    this.grantType = grantType;
  }

  public ApplyTokenRefreshTokenRequest authCode(@javax.annotation.Nullable String authCode) {
    
    this.authCode = authCode;
    return this;
  }

  /**
   * Authorization code. Please refer to https://dashboard.dana.id/api-docs/read/125. Required if grantType is AUTHORIZATION_CODE
   * @return authCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTH_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthCode() {
    return authCode;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthCode(@javax.annotation.Nullable String authCode) {
    this.authCode = authCode;
  }

  public ApplyTokenRefreshTokenRequest refreshToken(@javax.annotation.Nonnull String refreshToken) {
    
    this.refreshToken = refreshToken;
    return this;
  }

  /**
   * This token is used for refresh session if existing token has been expired
   * @return refreshToken
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REFRESH_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRefreshToken() {
    return refreshToken;
  }


  @JsonProperty(JSON_PROPERTY_REFRESH_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRefreshToken(@javax.annotation.Nonnull String refreshToken) {
    this.refreshToken = refreshToken;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplyTokenRefreshTokenRequest applyTokenRefreshTokenRequest = (ApplyTokenRefreshTokenRequest) o;
    return Objects.equals(this.additionalInfo, applyTokenRefreshTokenRequest.additionalInfo) &&
        Objects.equals(this.grantType, applyTokenRefreshTokenRequest.grantType) &&
        Objects.equals(this.authCode, applyTokenRefreshTokenRequest.authCode) &&
        Objects.equals(this.refreshToken, applyTokenRefreshTokenRequest.refreshToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalInfo, grantType, authCode, refreshToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplyTokenRefreshTokenRequest {\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("    grantType: ").append(toIndentedString(grantType)).append("\n");
    sb.append("    authCode: ").append(toIndentedString(authCode)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

