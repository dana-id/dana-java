/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.widget.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.dana.widget.v1.model.Money;
import id.dana.widget.v1.model.PayOptionDetail;
import id.dana.widget.v1.model.UrlParam;
import id.dana.widget.v1.model.WidgetPaymentRequestAdditionalInfo;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * WidgetPaymentRequest
 */
@JsonPropertyOrder({
  WidgetPaymentRequest.JSON_PROPERTY_PARTNER_REFERENCE_NO,
  WidgetPaymentRequest.JSON_PROPERTY_MERCHANT_ID,
  WidgetPaymentRequest.JSON_PROPERTY_SUB_MERCHANT_ID,
  WidgetPaymentRequest.JSON_PROPERTY_AMOUNT,
  WidgetPaymentRequest.JSON_PROPERTY_EXTERNAL_STORE_ID,
  WidgetPaymentRequest.JSON_PROPERTY_VALID_UP_TO,
  WidgetPaymentRequest.JSON_PROPERTY_POINT_OF_INITIATION,
  WidgetPaymentRequest.JSON_PROPERTY_DISABLED_PAY_METHODS,
  WidgetPaymentRequest.JSON_PROPERTY_PAY_OPTION_DETAILS,
  WidgetPaymentRequest.JSON_PROPERTY_ADDITIONAL_INFO,
  WidgetPaymentRequest.JSON_PROPERTY_URL_PARAMS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class WidgetPaymentRequest {
  public static final String JSON_PROPERTY_PARTNER_REFERENCE_NO = "partnerReferenceNo";
  @javax.annotation.Nonnull
  private String partnerReferenceNo;

  public static final String JSON_PROPERTY_MERCHANT_ID = "merchantId";
  @javax.annotation.Nonnull
  private String merchantId;

  public static final String JSON_PROPERTY_SUB_MERCHANT_ID = "subMerchantId";
  @javax.annotation.Nullable
  private String subMerchantId;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nonnull
  private Money amount;

  public static final String JSON_PROPERTY_EXTERNAL_STORE_ID = "externalStoreId";
  @javax.annotation.Nullable
  private String externalStoreId;

  public static final String JSON_PROPERTY_VALID_UP_TO = "validUpTo";
  @javax.annotation.Nullable
  private String validUpTo;

  public static final String JSON_PROPERTY_POINT_OF_INITIATION = "pointOfInitiation";
  @javax.annotation.Nullable
  private String pointOfInitiation;

  public static final String JSON_PROPERTY_DISABLED_PAY_METHODS = "disabledPayMethods";
  @javax.annotation.Nullable
  private String disabledPayMethods;

  public static final String JSON_PROPERTY_PAY_OPTION_DETAILS = "payOptionDetails";
  @javax.annotation.Nullable
  private List<PayOptionDetail> payOptionDetails = new ArrayList<>();

  public static final String JSON_PROPERTY_ADDITIONAL_INFO = "additionalInfo";
  @javax.annotation.Nonnull
  private WidgetPaymentRequestAdditionalInfo additionalInfo;

  public static final String JSON_PROPERTY_URL_PARAMS = "urlParams";
  @javax.annotation.Nullable
  private List<UrlParam> urlParams = new ArrayList<>();

  public WidgetPaymentRequest() {
  }

  public WidgetPaymentRequest partnerReferenceNo(@javax.annotation.Nonnull String partnerReferenceNo) {
    
    this.partnerReferenceNo = partnerReferenceNo;
    return this;
  }

  /**
   * Unique transaction identifier on partner system which assigned to each transaction
   * @return partnerReferenceNo
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARTNER_REFERENCE_NO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPartnerReferenceNo() {
    return partnerReferenceNo;
  }


  @JsonProperty(JSON_PROPERTY_PARTNER_REFERENCE_NO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPartnerReferenceNo(@javax.annotation.Nonnull String partnerReferenceNo) {
    this.partnerReferenceNo = partnerReferenceNo;
  }

  public WidgetPaymentRequest merchantId(@javax.annotation.Nonnull String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

  /**
   * Merchant identifier that is unique per each merchant
   * @return merchantId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMerchantId() {
    return merchantId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMerchantId(@javax.annotation.Nonnull String merchantId) {
    this.merchantId = merchantId;
  }

  public WidgetPaymentRequest subMerchantId(@javax.annotation.Nullable String subMerchantId) {
    
    this.subMerchantId = subMerchantId;
    return this;
  }

  /**
   * Get subMerchantId
   * @return subMerchantId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubMerchantId() {
    return subMerchantId;
  }


  @JsonProperty(JSON_PROPERTY_SUB_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubMerchantId(@javax.annotation.Nullable String subMerchantId) {
    this.subMerchantId = subMerchantId;
  }

  public WidgetPaymentRequest amount(@javax.annotation.Nonnull Money amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Money getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(@javax.annotation.Nonnull Money amount) {
    this.amount = amount;
  }

  public WidgetPaymentRequest externalStoreId(@javax.annotation.Nullable String externalStoreId) {
    
    this.externalStoreId = externalStoreId;
    return this;
  }

  /**
   * Store identifier to indicate to which store this payment belongs to
   * @return externalStoreId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_STORE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalStoreId() {
    return externalStoreId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_STORE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalStoreId(@javax.annotation.Nullable String externalStoreId) {
    this.externalStoreId = externalStoreId;
  }

  public WidgetPaymentRequest validUpTo(@javax.annotation.Nullable String validUpTo) {
    
    this.validUpTo = validUpTo;
    return this;
  }

  /**
   * The time when the payment will be automatically expired, in format YYYY-MM-DDTHH:mm:ss+07:00. Time must be in GMT+7 (Jakarta time)
   * @return validUpTo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_UP_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValidUpTo() {
    return validUpTo;
  }


  @JsonProperty(JSON_PROPERTY_VALID_UP_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidUpTo(@javax.annotation.Nullable String validUpTo) {
    this.validUpTo = validUpTo;
  }

  public WidgetPaymentRequest pointOfInitiation(@javax.annotation.Nullable String pointOfInitiation) {
    
    this.pointOfInitiation = pointOfInitiation;
    return this;
  }

  /**
   * Used for getting more info regarding source of request of the user
   * @return pointOfInitiation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POINT_OF_INITIATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPointOfInitiation() {
    return pointOfInitiation;
  }


  @JsonProperty(JSON_PROPERTY_POINT_OF_INITIATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPointOfInitiation(@javax.annotation.Nullable String pointOfInitiation) {
    this.pointOfInitiation = pointOfInitiation;
  }

  public WidgetPaymentRequest disabledPayMethods(@javax.annotation.Nullable String disabledPayMethods) {
    
    this.disabledPayMethods = disabledPayMethods;
    return this;
  }

  /**
   * Payment method(s) that cannot be used for this payment
   * @return disabledPayMethods
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLED_PAY_METHODS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisabledPayMethods() {
    return disabledPayMethods;
  }


  @JsonProperty(JSON_PROPERTY_DISABLED_PAY_METHODS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisabledPayMethods(@javax.annotation.Nullable String disabledPayMethods) {
    this.disabledPayMethods = disabledPayMethods;
  }

  public WidgetPaymentRequest payOptionDetails(@javax.annotation.Nullable List<PayOptionDetail> payOptionDetails) {
    
    this.payOptionDetails = payOptionDetails;
    return this;
  }

  public WidgetPaymentRequest addPayOptionDetailsItem(PayOptionDetail payOptionDetailsItem) {
    if (this.payOptionDetails == null) {
      this.payOptionDetails = new ArrayList<>();
    }
    this.payOptionDetails.add(payOptionDetailsItem);
    return this;
  }

  /**
   * Payment option that will be used for this payment
   * @return payOptionDetails
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAY_OPTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PayOptionDetail> getPayOptionDetails() {
    return payOptionDetails;
  }


  @JsonProperty(JSON_PROPERTY_PAY_OPTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayOptionDetails(@javax.annotation.Nullable List<PayOptionDetail> payOptionDetails) {
    this.payOptionDetails = payOptionDetails;
  }

  public WidgetPaymentRequest additionalInfo(@javax.annotation.Nonnull WidgetPaymentRequestAdditionalInfo additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

  /**
   * Get additionalInfo
   * @return additionalInfo
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WidgetPaymentRequestAdditionalInfo getAdditionalInfo() {
    return additionalInfo;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdditionalInfo(@javax.annotation.Nonnull WidgetPaymentRequestAdditionalInfo additionalInfo) {
    this.additionalInfo = additionalInfo;
  }

  public WidgetPaymentRequest urlParams(@javax.annotation.Nullable List<UrlParam> urlParams) {
    
    this.urlParams = urlParams;
    return this;
  }

  public WidgetPaymentRequest addUrlParamsItem(UrlParam urlParamsItem) {
    if (this.urlParams == null) {
      this.urlParams = new ArrayList<>();
    }
    this.urlParams.add(urlParamsItem);
    return this;
  }

  /**
   * Notify URL that DANA must send the payment notification to
   * @return urlParams
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UrlParam> getUrlParams() {
    return urlParams;
  }


  @JsonProperty(JSON_PROPERTY_URL_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrlParams(@javax.annotation.Nullable List<UrlParam> urlParams) {
    this.urlParams = urlParams;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WidgetPaymentRequest widgetPaymentRequest = (WidgetPaymentRequest) o;
    return Objects.equals(this.partnerReferenceNo, widgetPaymentRequest.partnerReferenceNo) &&
        Objects.equals(this.merchantId, widgetPaymentRequest.merchantId) &&
        Objects.equals(this.subMerchantId, widgetPaymentRequest.subMerchantId) &&
        Objects.equals(this.amount, widgetPaymentRequest.amount) &&
        Objects.equals(this.externalStoreId, widgetPaymentRequest.externalStoreId) &&
        Objects.equals(this.validUpTo, widgetPaymentRequest.validUpTo) &&
        Objects.equals(this.pointOfInitiation, widgetPaymentRequest.pointOfInitiation) &&
        Objects.equals(this.disabledPayMethods, widgetPaymentRequest.disabledPayMethods) &&
        Objects.equals(this.payOptionDetails, widgetPaymentRequest.payOptionDetails) &&
        Objects.equals(this.additionalInfo, widgetPaymentRequest.additionalInfo) &&
        Objects.equals(this.urlParams, widgetPaymentRequest.urlParams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partnerReferenceNo, merchantId, subMerchantId, amount, externalStoreId, validUpTo, pointOfInitiation, disabledPayMethods, payOptionDetails, additionalInfo, urlParams);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WidgetPaymentRequest {\n");
    sb.append("    partnerReferenceNo: ").append(toIndentedString(partnerReferenceNo)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    subMerchantId: ").append(toIndentedString(subMerchantId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    externalStoreId: ").append(toIndentedString(externalStoreId)).append("\n");
    sb.append("    validUpTo: ").append(toIndentedString(validUpTo)).append("\n");
    sb.append("    pointOfInitiation: ").append(toIndentedString(pointOfInitiation)).append("\n");
    sb.append("    disabledPayMethods: ").append(toIndentedString(disabledPayMethods)).append("\n");
    sb.append("    payOptionDetails: ").append(toIndentedString(payOptionDetails)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("    urlParams: ").append(toIndentedString(urlParams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

