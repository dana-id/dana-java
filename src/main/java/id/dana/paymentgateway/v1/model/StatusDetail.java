/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.paymentgateway.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StatusDetail
 */
@JsonPropertyOrder({
  StatusDetail.JSON_PROPERTY_ACQUIREMENT_STATUS,
  StatusDetail.JSON_PROPERTY_FROZEN,
  StatusDetail.JSON_PROPERTY_CANCELLED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class StatusDetail {
  /**
   * Acquirement status. The enums:&lt;br&gt; * INIT - Order is created but not paid yet&lt;br&gt; * SUCCESS - Order is succeeded&lt;br&gt; * CLOSED - Order is closed&lt;br&gt; * PAYING - Order is paid but not finish&lt;br&gt; * MERCHANT_ACCEPT - Order is accepted by merchant after order is paid for PAY-CONFIRM&lt;br&gt; * CANCELLED - Order is cancelled&lt;br&gt; 
   */
  public enum AcquirementStatusEnum {
    INIT(String.valueOf("INIT")),
    
    SUCCESS(String.valueOf("SUCCESS")),
    
    CLOSED(String.valueOf("CLOSED")),
    
    PAYING(String.valueOf("PAYING")),
    
    MERCHANT_ACCEPT(String.valueOf("MERCHANT_ACCEPT")),
    
    CANCELLED(String.valueOf("CANCELLED")),
    
    UNSPECIFIED(String.valueOf(""));

    private String value;

    AcquirementStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AcquirementStatusEnum fromValue(String value) {
      for (AcquirementStatusEnum b : AcquirementStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACQUIREMENT_STATUS = "acquirementStatus";
  @javax.annotation.Nonnull
  private AcquirementStatusEnum acquirementStatus;

  public static final String JSON_PROPERTY_FROZEN = "frozen";
  @javax.annotation.Nullable
  private String frozen;

  public static final String JSON_PROPERTY_CANCELLED = "cancelled";
  @javax.annotation.Nullable
  private String cancelled;

  public StatusDetail() {
  }

  public StatusDetail acquirementStatus(@javax.annotation.Nonnull AcquirementStatusEnum acquirementStatus) {
    
    this.acquirementStatus = acquirementStatus;
    return this;
  }

  /**
   * Acquirement status. The enums:&lt;br&gt; * INIT - Order is created but not paid yet&lt;br&gt; * SUCCESS - Order is succeeded&lt;br&gt; * CLOSED - Order is closed&lt;br&gt; * PAYING - Order is paid but not finish&lt;br&gt; * MERCHANT_ACCEPT - Order is accepted by merchant after order is paid for PAY-CONFIRM&lt;br&gt; * CANCELLED - Order is cancelled&lt;br&gt; 
   * @return acquirementStatus
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACQUIREMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AcquirementStatusEnum getAcquirementStatus() {
    return acquirementStatus;
  }


  @JsonProperty(JSON_PROPERTY_ACQUIREMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAcquirementStatus(@javax.annotation.Nonnull AcquirementStatusEnum acquirementStatus) {
    this.acquirementStatus = acquirementStatus;
  }

  public StatusDetail frozen(@javax.annotation.Nullable String frozen) {
    
    this.frozen = frozen;
    return this;
  }

  /**
   * Whether the frozen is true or not
   * @return frozen
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROZEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFrozen() {
    return frozen;
  }


  @JsonProperty(JSON_PROPERTY_FROZEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrozen(@javax.annotation.Nullable String frozen) {
    this.frozen = frozen;
  }

  public StatusDetail cancelled(@javax.annotation.Nullable String cancelled) {
    
    this.cancelled = cancelled;
    return this;
  }

  /**
   * Whether the cancelled is true or not
   * @return cancelled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANCELLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCancelled() {
    return cancelled;
  }


  @JsonProperty(JSON_PROPERTY_CANCELLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCancelled(@javax.annotation.Nullable String cancelled) {
    this.cancelled = cancelled;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusDetail statusDetail = (StatusDetail) o;
    return Objects.equals(this.acquirementStatus, statusDetail.acquirementStatus) &&
        Objects.equals(this.frozen, statusDetail.frozen) &&
        Objects.equals(this.cancelled, statusDetail.cancelled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acquirementStatus, frozen, cancelled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusDetail {\n");
    sb.append("    acquirementStatus: ").append(toIndentedString(acquirementStatus)).append("\n");
    sb.append("    frozen: ").append(toIndentedString(frozen)).append("\n");
    sb.append("    cancelled: ").append(toIndentedString(cancelled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

