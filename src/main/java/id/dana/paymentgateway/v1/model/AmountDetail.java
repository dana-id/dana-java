/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.paymentgateway.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.dana.paymentgateway.v1.model.Money;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AmountDetail
 */
@JsonPropertyOrder({
  AmountDetail.JSON_PROPERTY_ORDER_AMOUNT,
  AmountDetail.JSON_PROPERTY_PAY_AMOUNT,
  AmountDetail.JSON_PROPERTY_VOID_AMOUNT,
  AmountDetail.JSON_PROPERTY_CONFIRM_AMOUNT,
  AmountDetail.JSON_PROPERTY_REFUND_AMOUNT,
  AmountDetail.JSON_PROPERTY_CHARGEBACK_AMOUNT,
  AmountDetail.JSON_PROPERTY_CHARGE_AMOUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class AmountDetail {
  public static final String JSON_PROPERTY_ORDER_AMOUNT = "orderAmount";
  @javax.annotation.Nonnull
  private Money orderAmount;

  public static final String JSON_PROPERTY_PAY_AMOUNT = "payAmount";
  @javax.annotation.Nullable
  private Money payAmount;

  public static final String JSON_PROPERTY_VOID_AMOUNT = "voidAmount";
  @javax.annotation.Nullable
  private Money voidAmount;

  public static final String JSON_PROPERTY_CONFIRM_AMOUNT = "confirmAmount";
  @javax.annotation.Nullable
  private Money confirmAmount;

  public static final String JSON_PROPERTY_REFUND_AMOUNT = "refundAmount";
  @javax.annotation.Nullable
  private Money refundAmount;

  public static final String JSON_PROPERTY_CHARGEBACK_AMOUNT = "chargebackAmount";
  @javax.annotation.Nullable
  private Money chargebackAmount;

  public static final String JSON_PROPERTY_CHARGE_AMOUNT = "chargeAmount";
  @javax.annotation.Nullable
  private Money chargeAmount;

  public AmountDetail() {
  }

  public AmountDetail orderAmount(@javax.annotation.Nonnull Money orderAmount) {
    
    this.orderAmount = orderAmount;
    return this;
  }

  /**
   * Order amount. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO<br> 
   * @return orderAmount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORDER_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Money getOrderAmount() {
    return orderAmount;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrderAmount(@javax.annotation.Nonnull Money orderAmount) {
    this.orderAmount = orderAmount;
  }

  public AmountDetail payAmount(@javax.annotation.Nullable Money payAmount) {
    
    this.payAmount = payAmount;
    return this;
  }

  /**
   * Pay amount. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO<br> 
   * @return payAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Money getPayAmount() {
    return payAmount;
  }


  @JsonProperty(JSON_PROPERTY_PAY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayAmount(@javax.annotation.Nullable Money payAmount) {
    this.payAmount = payAmount;
  }

  public AmountDetail voidAmount(@javax.annotation.Nullable Money voidAmount) {
    
    this.voidAmount = voidAmount;
    return this;
  }

  /**
   * Void amount. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO<br> 
   * @return voidAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VOID_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Money getVoidAmount() {
    return voidAmount;
  }


  @JsonProperty(JSON_PROPERTY_VOID_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVoidAmount(@javax.annotation.Nullable Money voidAmount) {
    this.voidAmount = voidAmount;
  }

  public AmountDetail confirmAmount(@javax.annotation.Nullable Money confirmAmount) {
    
    this.confirmAmount = confirmAmount;
    return this;
  }

  /**
   * Confirm amount. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO<br> 
   * @return confirmAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONFIRM_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Money getConfirmAmount() {
    return confirmAmount;
  }


  @JsonProperty(JSON_PROPERTY_CONFIRM_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfirmAmount(@javax.annotation.Nullable Money confirmAmount) {
    this.confirmAmount = confirmAmount;
  }

  public AmountDetail refundAmount(@javax.annotation.Nullable Money refundAmount) {
    
    this.refundAmount = refundAmount;
    return this;
  }

  /**
   * Refund amount. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO<br> 
   * @return refundAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFUND_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Money getRefundAmount() {
    return refundAmount;
  }


  @JsonProperty(JSON_PROPERTY_REFUND_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRefundAmount(@javax.annotation.Nullable Money refundAmount) {
    this.refundAmount = refundAmount;
  }

  public AmountDetail chargebackAmount(@javax.annotation.Nullable Money chargebackAmount) {
    
    this.chargebackAmount = chargebackAmount;
    return this;
  }

  /**
   * Chargeback amount. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO<br> 
   * @return chargebackAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHARGEBACK_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Money getChargebackAmount() {
    return chargebackAmount;
  }


  @JsonProperty(JSON_PROPERTY_CHARGEBACK_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChargebackAmount(@javax.annotation.Nullable Money chargebackAmount) {
    this.chargebackAmount = chargebackAmount;
  }

  public AmountDetail chargeAmount(@javax.annotation.Nullable Money chargeAmount) {
    
    this.chargeAmount = chargeAmount;
    return this;
  }

  /**
   * Charge amount. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO<br> 
   * @return chargeAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHARGE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Money getChargeAmount() {
    return chargeAmount;
  }


  @JsonProperty(JSON_PROPERTY_CHARGE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChargeAmount(@javax.annotation.Nullable Money chargeAmount) {
    this.chargeAmount = chargeAmount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AmountDetail amountDetail = (AmountDetail) o;
    return Objects.equals(this.orderAmount, amountDetail.orderAmount) &&
        Objects.equals(this.payAmount, amountDetail.payAmount) &&
        Objects.equals(this.voidAmount, amountDetail.voidAmount) &&
        Objects.equals(this.confirmAmount, amountDetail.confirmAmount) &&
        Objects.equals(this.refundAmount, amountDetail.refundAmount) &&
        Objects.equals(this.chargebackAmount, amountDetail.chargebackAmount) &&
        Objects.equals(this.chargeAmount, amountDetail.chargeAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderAmount, payAmount, voidAmount, confirmAmount, refundAmount, chargebackAmount, chargeAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AmountDetail {\n");
    sb.append("    orderAmount: ").append(toIndentedString(orderAmount)).append("\n");
    sb.append("    payAmount: ").append(toIndentedString(payAmount)).append("\n");
    sb.append("    voidAmount: ").append(toIndentedString(voidAmount)).append("\n");
    sb.append("    confirmAmount: ").append(toIndentedString(confirmAmount)).append("\n");
    sb.append("    refundAmount: ").append(toIndentedString(refundAmount)).append("\n");
    sb.append("    chargebackAmount: ").append(toIndentedString(chargebackAmount)).append("\n");
    sb.append("    chargeAmount: ").append(toIndentedString(chargeAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
