/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.paymentgateway.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.dana.paymentgateway.v1.model.Money;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PromoInfo
 */
@JsonPropertyOrder({
  PromoInfo.JSON_PROPERTY_PROMO_AMOUNT,
  PromoInfo.JSON_PROPERTY_PROMO_ID,
  PromoInfo.JSON_PROPERTY_PROMO_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class PromoInfo {
  public static final String JSON_PROPERTY_PROMO_AMOUNT = "promoAmount";
  @javax.annotation.Nonnull
  private Money promoAmount;

  public static final String JSON_PROPERTY_PROMO_ID = "promoId";
  @javax.annotation.Nonnull
  private String promoId;

  public static final String JSON_PROPERTY_PROMO_TYPE = "promoType";
  @javax.annotation.Nonnull
  private String promoType = "DIRECT_DISCOUNT";

  public PromoInfo() {
  }

  public PromoInfo promoAmount(@javax.annotation.Nonnull Money promoAmount) {
    
    this.promoAmount = promoAmount;
    return this;
  }

  /**
   * Promo amount. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO<br> 
   * @return promoAmount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROMO_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Money getPromoAmount() {
    return promoAmount;
  }


  @JsonProperty(JSON_PROPERTY_PROMO_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPromoAmount(@javax.annotation.Nonnull Money promoAmount) {
    this.promoAmount = promoAmount;
  }

  public PromoInfo promoId(@javax.annotation.Nonnull String promoId) {
    
    this.promoId = promoId;
    return this;
  }

  /**
   * Promo identifier
   * @return promoId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROMO_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPromoId() {
    return promoId;
  }


  @JsonProperty(JSON_PROPERTY_PROMO_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPromoId(@javax.annotation.Nonnull String promoId) {
    this.promoId = promoId;
  }

  public PromoInfo promoType(@javax.annotation.Nonnull String promoType) {
    
    this.promoType = promoType;
    return this;
  }

  /**
   * Type's of promo, value always DIRECT_DISCOUNT
   * @return promoType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROMO_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPromoType() {
    return promoType;
  }


  @JsonProperty(JSON_PROPERTY_PROMO_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPromoType(@javax.annotation.Nonnull String promoType) {
    this.promoType = promoType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromoInfo promoInfo = (PromoInfo) o;
    return Objects.equals(this.promoAmount, promoInfo.promoAmount) &&
        Objects.equals(this.promoId, promoInfo.promoId) &&
        Objects.equals(this.promoType, promoInfo.promoType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(promoAmount, promoId, promoType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromoInfo {\n");
    sb.append("    promoAmount: ").append(toIndentedString(promoAmount)).append("\n");
    sb.append("    promoId: ").append(toIndentedString(promoId)).append("\n");
    sb.append("    promoType: ").append(toIndentedString(promoType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
