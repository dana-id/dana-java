/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.disbursement.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.dana.disbursement.v1.model.Money;
import id.dana.disbursement.v1.model.TransferToBankRequestAdditionalInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TransferToBankRequest
 */
@JsonPropertyOrder({
  TransferToBankRequest.JSON_PROPERTY_PARTNER_REFERENCE_NO,
  TransferToBankRequest.JSON_PROPERTY_CUSTOMER_NUMBER,
  TransferToBankRequest.JSON_PROPERTY_ACCOUNT_TYPE,
  TransferToBankRequest.JSON_PROPERTY_BENEFICIARY_ACCOUNT_NUMBER,
  TransferToBankRequest.JSON_PROPERTY_BENEFICIARY_BANK_CODE,
  TransferToBankRequest.JSON_PROPERTY_AMOUNT,
  TransferToBankRequest.JSON_PROPERTY_ADDITIONAL_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class TransferToBankRequest {
  public static final String JSON_PROPERTY_PARTNER_REFERENCE_NO = "partnerReferenceNo";
  @javax.annotation.Nullable
  private String partnerReferenceNo;

  public static final String JSON_PROPERTY_CUSTOMER_NUMBER = "customerNumber";
  @javax.annotation.Nonnull
  private String customerNumber;

  public static final String JSON_PROPERTY_ACCOUNT_TYPE = "accountType";
  @javax.annotation.Nullable
  private String accountType;

  public static final String JSON_PROPERTY_BENEFICIARY_ACCOUNT_NUMBER = "beneficiaryAccountNumber";
  @javax.annotation.Nonnull
  private String beneficiaryAccountNumber;

  public static final String JSON_PROPERTY_BENEFICIARY_BANK_CODE = "beneficiaryBankCode";
  @javax.annotation.Nonnull
  private String beneficiaryBankCode;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nonnull
  private Money amount;

  public static final String JSON_PROPERTY_ADDITIONAL_INFO = "additionalInfo";
  @javax.annotation.Nonnull
  private TransferToBankRequestAdditionalInfo additionalInfo;

  public TransferToBankRequest() {
  }

  public TransferToBankRequest partnerReferenceNo(@javax.annotation.Nullable String partnerReferenceNo) {
    
    this.partnerReferenceNo = partnerReferenceNo;
    return this;
  }

  /**
   * Unique transaction identifier on partner system which assigned to each transaction<br> Notes:<br> If the partner receives a timeout or an unexpected response from DANA and partner expects to perform retry request to DANA, please use the partnerReferenceNo that is the same as the one used in the transaction request process before 
   * @return partnerReferenceNo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTNER_REFERENCE_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPartnerReferenceNo() {
    return partnerReferenceNo;
  }


  @JsonProperty(JSON_PROPERTY_PARTNER_REFERENCE_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPartnerReferenceNo(@javax.annotation.Nullable String partnerReferenceNo) {
    this.partnerReferenceNo = partnerReferenceNo;
  }

  public TransferToBankRequest customerNumber(@javax.annotation.Nonnull String customerNumber) {
    
    this.customerNumber = customerNumber;
    return this;
  }

  /**
   * Customer account number, in format 628xxx
   * @return customerNumber
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerNumber() {
    return customerNumber;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerNumber(@javax.annotation.Nonnull String customerNumber) {
    this.customerNumber = customerNumber;
  }

  public TransferToBankRequest accountType(@javax.annotation.Nullable String accountType) {
    
    this.accountType = accountType;
    return this;
  }

  /**
   * Customer account type
   * @return accountType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountType() {
    return accountType;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountType(@javax.annotation.Nullable String accountType) {
    this.accountType = accountType;
  }

  public TransferToBankRequest beneficiaryAccountNumber(@javax.annotation.Nonnull String beneficiaryAccountNumber) {
    
    this.beneficiaryAccountNumber = beneficiaryAccountNumber;
    return this;
  }

  /**
   * Beneficiary account number
   * @return beneficiaryAccountNumber
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBeneficiaryAccountNumber() {
    return beneficiaryAccountNumber;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBeneficiaryAccountNumber(@javax.annotation.Nonnull String beneficiaryAccountNumber) {
    this.beneficiaryAccountNumber = beneficiaryAccountNumber;
  }

  public TransferToBankRequest beneficiaryBankCode(@javax.annotation.Nonnull String beneficiaryBankCode) {
    
    this.beneficiaryBankCode = beneficiaryBankCode;
    return this;
  }

  /**
   * Beneficiary Bank code
   * @return beneficiaryBankCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_BANK_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBeneficiaryBankCode() {
    return beneficiaryBankCode;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY_BANK_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBeneficiaryBankCode(@javax.annotation.Nonnull String beneficiaryBankCode) {
    this.beneficiaryBankCode = beneficiaryBankCode;
  }

  public TransferToBankRequest amount(@javax.annotation.Nonnull Money amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Amount. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO 
   * @return amount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Money getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(@javax.annotation.Nonnull Money amount) {
    this.amount = amount;
  }

  public TransferToBankRequest additionalInfo(@javax.annotation.Nonnull TransferToBankRequestAdditionalInfo additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

  /**
   * Get additionalInfo
   * @return additionalInfo
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TransferToBankRequestAdditionalInfo getAdditionalInfo() {
    return additionalInfo;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdditionalInfo(@javax.annotation.Nonnull TransferToBankRequestAdditionalInfo additionalInfo) {
    this.additionalInfo = additionalInfo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferToBankRequest transferToBankRequest = (TransferToBankRequest) o;
    return Objects.equals(this.partnerReferenceNo, transferToBankRequest.partnerReferenceNo) &&
        Objects.equals(this.customerNumber, transferToBankRequest.customerNumber) &&
        Objects.equals(this.accountType, transferToBankRequest.accountType) &&
        Objects.equals(this.beneficiaryAccountNumber, transferToBankRequest.beneficiaryAccountNumber) &&
        Objects.equals(this.beneficiaryBankCode, transferToBankRequest.beneficiaryBankCode) &&
        Objects.equals(this.amount, transferToBankRequest.amount) &&
        Objects.equals(this.additionalInfo, transferToBankRequest.additionalInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partnerReferenceNo, customerNumber, accountType, beneficiaryAccountNumber, beneficiaryBankCode, amount, additionalInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferToBankRequest {\n");
    sb.append("    partnerReferenceNo: ").append(toIndentedString(partnerReferenceNo)).append("\n");
    sb.append("    customerNumber: ").append(toIndentedString(customerNumber)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    beneficiaryAccountNumber: ").append(toIndentedString(beneficiaryAccountNumber)).append("\n");
    sb.append("    beneficiaryBankCode: ").append(toIndentedString(beneficiaryBankCode)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
