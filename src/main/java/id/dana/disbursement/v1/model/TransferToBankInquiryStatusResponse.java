/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.disbursement.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.dana.disbursement.v1.model.Money;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TransferToBankInquiryStatusResponse
 */
@JsonPropertyOrder({
  TransferToBankInquiryStatusResponse.JSON_PROPERTY_RESPONSE_CODE,
  TransferToBankInquiryStatusResponse.JSON_PROPERTY_RESPONSE_MESSAGE,
  TransferToBankInquiryStatusResponse.JSON_PROPERTY_ORIGINAL_PARTNER_REFERENCE_NO,
  TransferToBankInquiryStatusResponse.JSON_PROPERTY_ORIGINAL_REFERENCE_NO,
  TransferToBankInquiryStatusResponse.JSON_PROPERTY_ORIGINAL_EXTERNAL_ID,
  TransferToBankInquiryStatusResponse.JSON_PROPERTY_SERVICE_CODE,
  TransferToBankInquiryStatusResponse.JSON_PROPERTY_AMOUNT,
  TransferToBankInquiryStatusResponse.JSON_PROPERTY_LATEST_TRANSACTION_STATUS,
  TransferToBankInquiryStatusResponse.JSON_PROPERTY_TRANSACTION_STATUS_DESC,
  TransferToBankInquiryStatusResponse.JSON_PROPERTY_ADDITIONAL_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class TransferToBankInquiryStatusResponse {
  public static final String JSON_PROPERTY_RESPONSE_CODE = "responseCode";
  @javax.annotation.Nonnull
  private String responseCode;

  public static final String JSON_PROPERTY_RESPONSE_MESSAGE = "responseMessage";
  @javax.annotation.Nonnull
  private String responseMessage;

  public static final String JSON_PROPERTY_ORIGINAL_PARTNER_REFERENCE_NO = "originalPartnerReferenceNo";
  @javax.annotation.Nullable
  private String originalPartnerReferenceNo;

  public static final String JSON_PROPERTY_ORIGINAL_REFERENCE_NO = "originalReferenceNo";
  @javax.annotation.Nullable
  private String originalReferenceNo;

  public static final String JSON_PROPERTY_ORIGINAL_EXTERNAL_ID = "originalExternalId";
  @javax.annotation.Nullable
  private String originalExternalId;

  public static final String JSON_PROPERTY_SERVICE_CODE = "serviceCode";
  @javax.annotation.Nonnull
  private String serviceCode = "00";

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nullable
  private Money amount;

  /**
   * Status of latest transaction:<br> 00 - Success<br> 01 - Initiated<br> 02 - Paying<br> 03 - Pending<br> 04 - Refunded<br> 05 - Cancelled<br> 06 - Failed<br> 07 - Not found 
   */
  public enum LatestTransactionStatusEnum {
    /**
     * Success
     */
    _00(String.valueOf("00")),
    
    /**
     * Initiated
     */
    _01(String.valueOf("01")),
    
    /**
     * Paying
     */
    _02(String.valueOf("02")),
    
    /**
     * Pending
     */
    _03(String.valueOf("03")),
    
    /**
     * Refunded
     */
    _04(String.valueOf("04")),
    
    /**
     * Cancelled
     */
    _05(String.valueOf("05")),
    
    /**
     * Failed
     */
    _06(String.valueOf("06")),
    
    /**
     * Not found
     */
    _07(String.valueOf("07")),
    
    /**
     * To handle empty string value
     */
    UNSPECIFIED(String.valueOf(""));

    private String value;

    LatestTransactionStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LatestTransactionStatusEnum fromValue(String value) {
      for (LatestTransactionStatusEnum b : LatestTransactionStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
  public static final String JSON_PROPERTY_LATEST_TRANSACTION_STATUS = "latestTransactionStatus";
  @javax.annotation.Nonnull
  private LatestTransactionStatusEnum latestTransactionStatus;

  public static final String JSON_PROPERTY_TRANSACTION_STATUS_DESC = "transactionStatusDesc";
  @javax.annotation.Nullable
  private String transactionStatusDesc;

  public static final String JSON_PROPERTY_ADDITIONAL_INFO = "additionalInfo";
  @javax.annotation.Nullable
  private Object additionalInfo;

  public TransferToBankInquiryStatusResponse() {
  }

  public TransferToBankInquiryStatusResponse responseCode(@javax.annotation.Nonnull String responseCode) {
    
    this.responseCode = responseCode;
    return this;
  }

  /**
   * Refer to response code list
   * @return responseCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResponseCode() {
    return responseCode;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResponseCode(@javax.annotation.Nonnull String responseCode) {
    this.responseCode = responseCode;
  }

  public TransferToBankInquiryStatusResponse responseMessage(@javax.annotation.Nonnull String responseMessage) {
    
    this.responseMessage = responseMessage;
    return this;
  }

  /**
   * Refer to response code list
   * @return responseMessage
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESPONSE_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResponseMessage() {
    return responseMessage;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResponseMessage(@javax.annotation.Nonnull String responseMessage) {
    this.responseMessage = responseMessage;
  }

  public TransferToBankInquiryStatusResponse originalPartnerReferenceNo(@javax.annotation.Nullable String originalPartnerReferenceNo) {
    
    this.originalPartnerReferenceNo = originalPartnerReferenceNo;
    return this;
  }

  /**
   * Original transaction identifier on partner system
   * @return originalPartnerReferenceNo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINAL_PARTNER_REFERENCE_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginalPartnerReferenceNo() {
    return originalPartnerReferenceNo;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_PARTNER_REFERENCE_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalPartnerReferenceNo(@javax.annotation.Nullable String originalPartnerReferenceNo) {
    this.originalPartnerReferenceNo = originalPartnerReferenceNo;
  }

  public TransferToBankInquiryStatusResponse originalReferenceNo(@javax.annotation.Nullable String originalReferenceNo) {
    
    this.originalReferenceNo = originalReferenceNo;
    return this;
  }

  /**
   * Original transaction identifier on DANA system
   * @return originalReferenceNo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINAL_REFERENCE_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginalReferenceNo() {
    return originalReferenceNo;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_REFERENCE_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalReferenceNo(@javax.annotation.Nullable String originalReferenceNo) {
    this.originalReferenceNo = originalReferenceNo;
  }

  public TransferToBankInquiryStatusResponse originalExternalId(@javax.annotation.Nullable String originalExternalId) {
    
    this.originalExternalId = originalExternalId;
    return this;
  }

  /**
   * Original external identifier on header message
   * @return originalExternalId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINAL_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginalExternalId() {
    return originalExternalId;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalExternalId(@javax.annotation.Nullable String originalExternalId) {
    this.originalExternalId = originalExternalId;
  }

  public TransferToBankInquiryStatusResponse serviceCode(@javax.annotation.Nonnull String serviceCode) {
    
    this.serviceCode = serviceCode;
    return this;
  }

  /**
   * Transaction type indicator is based on the service code of the original transaction request, value always 00
   * @return serviceCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SERVICE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getServiceCode() {
    return serviceCode;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServiceCode(@javax.annotation.Nonnull String serviceCode) {
    this.serviceCode = serviceCode;
  }

  public TransferToBankInquiryStatusResponse amount(@javax.annotation.Nullable Money amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Amount. Contains two sub-fields:<br> 1. Value: Transaction amount, including the cents<br> 2. Currency: Currency code based on ISO 
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Money getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(@javax.annotation.Nullable Money amount) {
    this.amount = amount;
  }

  public TransferToBankInquiryStatusResponse latestTransactionStatus(@javax.annotation.Nonnull LatestTransactionStatusEnum latestTransactionStatus) {
    
    this.latestTransactionStatus = latestTransactionStatus;
    return this;
  }

  /**
   * Status of latest transaction:<br> 00 - Success<br> 01 - Initiated<br> 02 - Paying<br> 03 - Pending<br> 04 - Refunded<br> 05 - Cancelled<br> 06 - Failed<br> 07 - Not found 
   * @return latestTransactionStatus
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LATEST_TRANSACTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LatestTransactionStatusEnum getLatestTransactionStatus() {
    return latestTransactionStatus;
  }


  @JsonProperty(JSON_PROPERTY_LATEST_TRANSACTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLatestTransactionStatus(@javax.annotation.Nonnull LatestTransactionStatusEnum latestTransactionStatus) {
    this.latestTransactionStatus = latestTransactionStatus;
  }

  public TransferToBankInquiryStatusResponse transactionStatusDesc(@javax.annotation.Nullable String transactionStatusDesc) {
    
    this.transactionStatusDesc = transactionStatusDesc;
    return this;
  }

  /**
   * Description of transaction status
   * @return transactionStatusDesc
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_STATUS_DESC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionStatusDesc() {
    return transactionStatusDesc;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_STATUS_DESC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionStatusDesc(@javax.annotation.Nullable String transactionStatusDesc) {
    this.transactionStatusDesc = transactionStatusDesc;
  }

  public TransferToBankInquiryStatusResponse additionalInfo(@javax.annotation.Nullable Object additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

  /**
   * Additional information
   * @return additionalInfo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getAdditionalInfo() {
    return additionalInfo;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalInfo(@javax.annotation.Nullable Object additionalInfo) {
    this.additionalInfo = additionalInfo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferToBankInquiryStatusResponse transferToBankInquiryStatusResponse = (TransferToBankInquiryStatusResponse) o;
    return Objects.equals(this.responseCode, transferToBankInquiryStatusResponse.responseCode) &&
        Objects.equals(this.responseMessage, transferToBankInquiryStatusResponse.responseMessage) &&
        Objects.equals(this.originalPartnerReferenceNo, transferToBankInquiryStatusResponse.originalPartnerReferenceNo) &&
        Objects.equals(this.originalReferenceNo, transferToBankInquiryStatusResponse.originalReferenceNo) &&
        Objects.equals(this.originalExternalId, transferToBankInquiryStatusResponse.originalExternalId) &&
        Objects.equals(this.serviceCode, transferToBankInquiryStatusResponse.serviceCode) &&
        Objects.equals(this.amount, transferToBankInquiryStatusResponse.amount) &&
        Objects.equals(this.latestTransactionStatus, transferToBankInquiryStatusResponse.latestTransactionStatus) &&
        Objects.equals(this.transactionStatusDesc, transferToBankInquiryStatusResponse.transactionStatusDesc) &&
        Objects.equals(this.additionalInfo, transferToBankInquiryStatusResponse.additionalInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(responseCode, responseMessage, originalPartnerReferenceNo, originalReferenceNo, originalExternalId, serviceCode, amount, latestTransactionStatus, transactionStatusDesc, additionalInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferToBankInquiryStatusResponse {\n");
    sb.append("    responseCode: ").append(toIndentedString(responseCode)).append("\n");
    sb.append("    responseMessage: ").append(toIndentedString(responseMessage)).append("\n");
    sb.append("    originalPartnerReferenceNo: ").append(toIndentedString(originalPartnerReferenceNo)).append("\n");
    sb.append("    originalReferenceNo: ").append(toIndentedString(originalReferenceNo)).append("\n");
    sb.append("    originalExternalId: ").append(toIndentedString(originalExternalId)).append("\n");
    sb.append("    serviceCode: ").append(toIndentedString(serviceCode)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    latestTransactionStatus: ").append(toIndentedString(latestTransactionStatus)).append("\n");
    sb.append("    transactionStatusDesc: ").append(toIndentedString(transactionStatusDesc)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
