/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.merchantmanagement.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.dana.merchantmanagement.v1.model.AddressInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DivisionResourceInfo
 */
@JsonPropertyOrder({
  DivisionResourceInfo.JSON_PROPERTY_DIVISION_ID,
  DivisionResourceInfo.JSON_PROPERTY_MERCHANT_ID,
  DivisionResourceInfo.JSON_PROPERTY_PARENT_ROLE_TYPE,
  DivisionResourceInfo.JSON_PROPERTY_CONTACT_ADDRESS,
  DivisionResourceInfo.JSON_PROPERTY_DIVISION_DESCRIPTION,
  DivisionResourceInfo.JSON_PROPERTY_DIVISION_TYPE,
  DivisionResourceInfo.JSON_PROPERTY_DIVISION_NAME,
  DivisionResourceInfo.JSON_PROPERTY_EXTERNAL_DIVISION_ID,
  DivisionResourceInfo.JSON_PROPERTY_PG_DIVISION_FLAG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class DivisionResourceInfo {
  public static final String JSON_PROPERTY_DIVISION_ID = "divisionId";
  @javax.annotation.Nullable
  private String divisionId;

  public static final String JSON_PROPERTY_MERCHANT_ID = "merchantId";
  @javax.annotation.Nullable
  private String merchantId;

  /**
   * Parent role type
   */
  public enum ParentRoleTypeEnum {
    MERCHANT(String.valueOf("MERCHANT")),
    
    DIVISION(String.valueOf("DIVISION")),
    
    EXTERNAL_DIVISION(String.valueOf("EXTERNAL_DIVISION")),
    
    /**
     * To handle empty string value
     */
    UNSPECIFIED(String.valueOf(""));

    private String value;

    ParentRoleTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ParentRoleTypeEnum fromValue(String value) {
      for (ParentRoleTypeEnum b : ParentRoleTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
  public static final String JSON_PROPERTY_PARENT_ROLE_TYPE = "parentRoleType";
  @javax.annotation.Nullable
  private ParentRoleTypeEnum parentRoleType;

  public static final String JSON_PROPERTY_CONTACT_ADDRESS = "contactAddress";
  @javax.annotation.Nullable
  private AddressInfo contactAddress;

  public static final String JSON_PROPERTY_DIVISION_DESCRIPTION = "divisionDescription";
  @javax.annotation.Nullable
  private String divisionDescription;

  /**
   * Division type
   */
  public enum DivisionTypeEnum {
    REGION(String.valueOf("REGION")),
    
    AREA(String.valueOf("AREA")),
    
    BRANCH(String.valueOf("BRANCH")),
    
    OUTLET(String.valueOf("OUTLET")),
    
    STORE(String.valueOf("STORE")),
    
    KIOSK(String.valueOf("KIOSK")),
    
    STALL(String.valueOf("STALL")),
    
    COUNTER(String.valueOf("COUNTER")),
    
    BOOTH(String.valueOf("BOOTH")),
    
    POINT_OF_SALE(String.valueOf("POINT_OF_SALE")),
    
    VENDING_MACHINE(String.valueOf("VENDING_MACHINE")),
    
    /**
     * To handle empty string value
     */
    UNSPECIFIED(String.valueOf(""));

    private String value;

    DivisionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DivisionTypeEnum fromValue(String value) {
      for (DivisionTypeEnum b : DivisionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
  public static final String JSON_PROPERTY_DIVISION_TYPE = "divisionType";
  @javax.annotation.Nullable
  private DivisionTypeEnum divisionType;

  public static final String JSON_PROPERTY_DIVISION_NAME = "divisionName";
  @javax.annotation.Nullable
  private String divisionName;

  public static final String JSON_PROPERTY_EXTERNAL_DIVISION_ID = "externalDivisionId";
  @javax.annotation.Nullable
  private String externalDivisionId;

  /**
   * Flag if division is type PG
   */
  public enum PgDivisionFlagEnum {
    TRUE(String.valueOf("true")),
    
    FALSE(String.valueOf("false")),
    
    /**
     * To handle empty string value
     */
    UNSPECIFIED(String.valueOf(""));

    private String value;

    PgDivisionFlagEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PgDivisionFlagEnum fromValue(String value) {
      for (PgDivisionFlagEnum b : PgDivisionFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
  public static final String JSON_PROPERTY_PG_DIVISION_FLAG = "pgDivisionFlag";
  @javax.annotation.Nullable
  private PgDivisionFlagEnum pgDivisionFlag;

  public DivisionResourceInfo() {
  }

  public DivisionResourceInfo divisionId(@javax.annotation.Nullable String divisionId) {
    
    this.divisionId = divisionId;
    return this;
  }

  /**
   * Division identifier
   * @return divisionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIVISION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDivisionId() {
    return divisionId;
  }


  @JsonProperty(JSON_PROPERTY_DIVISION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDivisionId(@javax.annotation.Nullable String divisionId) {
    this.divisionId = divisionId;
  }

  public DivisionResourceInfo merchantId(@javax.annotation.Nullable String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

  /**
   * Merchant identifier
   * @return merchantId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMerchantId() {
    return merchantId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantId(@javax.annotation.Nullable String merchantId) {
    this.merchantId = merchantId;
  }

  public DivisionResourceInfo parentRoleType(@javax.annotation.Nullable ParentRoleTypeEnum parentRoleType) {
    
    this.parentRoleType = parentRoleType;
    return this;
  }

  /**
   * Parent role type
   * @return parentRoleType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT_ROLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ParentRoleTypeEnum getParentRoleType() {
    return parentRoleType;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_ROLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentRoleType(@javax.annotation.Nullable ParentRoleTypeEnum parentRoleType) {
    this.parentRoleType = parentRoleType;
  }

  public DivisionResourceInfo contactAddress(@javax.annotation.Nullable AddressInfo contactAddress) {
    
    this.contactAddress = contactAddress;
    return this;
  }

  /**
   * Get contactAddress
   * @return contactAddress
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTACT_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AddressInfo getContactAddress() {
    return contactAddress;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContactAddress(@javax.annotation.Nullable AddressInfo contactAddress) {
    this.contactAddress = contactAddress;
  }

  public DivisionResourceInfo divisionDescription(@javax.annotation.Nullable String divisionDescription) {
    
    this.divisionDescription = divisionDescription;
    return this;
  }

  /**
   * Division description
   * @return divisionDescription
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIVISION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDivisionDescription() {
    return divisionDescription;
  }


  @JsonProperty(JSON_PROPERTY_DIVISION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDivisionDescription(@javax.annotation.Nullable String divisionDescription) {
    this.divisionDescription = divisionDescription;
  }

  public DivisionResourceInfo divisionType(@javax.annotation.Nullable DivisionTypeEnum divisionType) {
    
    this.divisionType = divisionType;
    return this;
  }

  /**
   * Division type
   * @return divisionType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIVISION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DivisionTypeEnum getDivisionType() {
    return divisionType;
  }


  @JsonProperty(JSON_PROPERTY_DIVISION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDivisionType(@javax.annotation.Nullable DivisionTypeEnum divisionType) {
    this.divisionType = divisionType;
  }

  public DivisionResourceInfo divisionName(@javax.annotation.Nullable String divisionName) {
    
    this.divisionName = divisionName;
    return this;
  }

  /**
   * Division name
   * @return divisionName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIVISION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDivisionName() {
    return divisionName;
  }


  @JsonProperty(JSON_PROPERTY_DIVISION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDivisionName(@javax.annotation.Nullable String divisionName) {
    this.divisionName = divisionName;
  }

  public DivisionResourceInfo externalDivisionId(@javax.annotation.Nullable String externalDivisionId) {
    
    this.externalDivisionId = externalDivisionId;
    return this;
  }

  /**
   * External division identifier
   * @return externalDivisionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_DIVISION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalDivisionId() {
    return externalDivisionId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_DIVISION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalDivisionId(@javax.annotation.Nullable String externalDivisionId) {
    this.externalDivisionId = externalDivisionId;
  }

  public DivisionResourceInfo pgDivisionFlag(@javax.annotation.Nullable PgDivisionFlagEnum pgDivisionFlag) {
    
    this.pgDivisionFlag = pgDivisionFlag;
    return this;
  }

  /**
   * Flag if division is type PG
   * @return pgDivisionFlag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PG_DIVISION_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PgDivisionFlagEnum getPgDivisionFlag() {
    return pgDivisionFlag;
  }


  @JsonProperty(JSON_PROPERTY_PG_DIVISION_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPgDivisionFlag(@javax.annotation.Nullable PgDivisionFlagEnum pgDivisionFlag) {
    this.pgDivisionFlag = pgDivisionFlag;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DivisionResourceInfo divisionResourceInfo = (DivisionResourceInfo) o;
    return Objects.equals(this.divisionId, divisionResourceInfo.divisionId) &&
        Objects.equals(this.merchantId, divisionResourceInfo.merchantId) &&
        Objects.equals(this.parentRoleType, divisionResourceInfo.parentRoleType) &&
        Objects.equals(this.contactAddress, divisionResourceInfo.contactAddress) &&
        Objects.equals(this.divisionDescription, divisionResourceInfo.divisionDescription) &&
        Objects.equals(this.divisionType, divisionResourceInfo.divisionType) &&
        Objects.equals(this.divisionName, divisionResourceInfo.divisionName) &&
        Objects.equals(this.externalDivisionId, divisionResourceInfo.externalDivisionId) &&
        Objects.equals(this.pgDivisionFlag, divisionResourceInfo.pgDivisionFlag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(divisionId, merchantId, parentRoleType, contactAddress, divisionDescription, divisionType, divisionName, externalDivisionId, pgDivisionFlag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DivisionResourceInfo {\n");
    sb.append("    divisionId: ").append(toIndentedString(divisionId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    parentRoleType: ").append(toIndentedString(parentRoleType)).append("\n");
    sb.append("    contactAddress: ").append(toIndentedString(contactAddress)).append("\n");
    sb.append("    divisionDescription: ").append(toIndentedString(divisionDescription)).append("\n");
    sb.append("    divisionType: ").append(toIndentedString(divisionType)).append("\n");
    sb.append("    divisionName: ").append(toIndentedString(divisionName)).append("\n");
    sb.append("    externalDivisionId: ").append(toIndentedString(externalDivisionId)).append("\n");
    sb.append("    pgDivisionFlag: ").append(toIndentedString(pgDivisionFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
