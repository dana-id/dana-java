/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.merchantmanagement.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * QueryShopRequest
 */
@JsonPropertyOrder({
  QueryShopRequest.JSON_PROPERTY_MERCHANT_ID,
  QueryShopRequest.JSON_PROPERTY_SHOP_ID,
  QueryShopRequest.JSON_PROPERTY_SHOP_ID_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class QueryShopRequest {
  public static final String JSON_PROPERTY_MERCHANT_ID = "merchantId";
  @javax.annotation.Nullable
  private String merchantId;

  public static final String JSON_PROPERTY_SHOP_ID = "shopId";
  @javax.annotation.Nonnull
  private String shopId;

  /**
   * Shop identifier type
   */
  public enum ShopIdTypeEnum {
    INNER_ID(String.valueOf("INNER_ID")),
    
    EXTERNAL_ID(String.valueOf("EXTERNAL_ID")),
    
    /**
     * To handle empty string value
     */
    UNSPECIFIED(String.valueOf(""));

    private String value;

    ShopIdTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ShopIdTypeEnum fromValue(String value) {
      for (ShopIdTypeEnum b : ShopIdTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
  public static final String JSON_PROPERTY_SHOP_ID_TYPE = "shopIdType";
  @javax.annotation.Nonnull
  private ShopIdTypeEnum shopIdType;

  public QueryShopRequest() {
  }

  public QueryShopRequest merchantId(@javax.annotation.Nullable String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

  /**
   * Merchant identifier. Required when shopIdType is EXTERNAL_ID
   * @return merchantId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMerchantId() {
    return merchantId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantId(@javax.annotation.Nullable String merchantId) {
    this.merchantId = merchantId;
  }

  public QueryShopRequest shopId(@javax.annotation.Nonnull String shopId) {
    
    this.shopId = shopId;
    return this;
  }

  /**
   * Shop identifier. Length depends on shopIdType - INNER_ID (21 max), EXTERNAL_ID (64 max)
   * @return shopId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHOP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getShopId() {
    return shopId;
  }


  @JsonProperty(JSON_PROPERTY_SHOP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShopId(@javax.annotation.Nonnull String shopId) {
    this.shopId = shopId;
  }

  public QueryShopRequest shopIdType(@javax.annotation.Nonnull ShopIdTypeEnum shopIdType) {
    
    this.shopIdType = shopIdType;
    return this;
  }

  /**
   * Shop identifier type
   * @return shopIdType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHOP_ID_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ShopIdTypeEnum getShopIdType() {
    return shopIdType;
  }


  @JsonProperty(JSON_PROPERTY_SHOP_ID_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShopIdType(@javax.annotation.Nonnull ShopIdTypeEnum shopIdType) {
    this.shopIdType = shopIdType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryShopRequest queryShopRequest = (QueryShopRequest) o;
    return Objects.equals(this.merchantId, queryShopRequest.merchantId) &&
        Objects.equals(this.shopId, queryShopRequest.shopId) &&
        Objects.equals(this.shopIdType, queryShopRequest.shopIdType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantId, shopId, shopIdType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryShopRequest {\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    shopId: ").append(toIndentedString(shopId)).append("\n");
    sb.append("    shopIdType: ").append(toIndentedString(shopIdType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
