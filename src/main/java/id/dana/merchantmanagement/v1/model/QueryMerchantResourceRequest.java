/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.merchantmanagement.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * QueryMerchantResourceRequest
 */
@JsonPropertyOrder({
  QueryMerchantResourceRequest.JSON_PROPERTY_REQUEST_MERCHANT_ID,
  QueryMerchantResourceRequest.JSON_PROPERTY_MERCHANT_RESOURCE_INFO_LIST
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class QueryMerchantResourceRequest {
  public static final String JSON_PROPERTY_REQUEST_MERCHANT_ID = "requestMerchantId";
  @javax.annotation.Nonnull
  private String requestMerchantId;

  /**
   * Gets or Sets merchantResourceInfoList
   */
  public enum MerchantResourceInfoListEnum {
    MERCHANT_DEPOSIT_BALANCE(String.valueOf("MERCHANT_DEPOSIT_BALANCE")),
    
    MERCHANT_AVAILABLE_BALANCE(String.valueOf("MERCHANT_AVAILABLE_BALANCE")),
    
    MERCHANT_TOTAL_BALANCE(String.valueOf("MERCHANT_TOTAL_BALANCE")),
    
    /**
     * To handle empty string value
     */
    UNSPECIFIED(String.valueOf(""));

    private String value;

    MerchantResourceInfoListEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MerchantResourceInfoListEnum fromValue(String value) {
      for (MerchantResourceInfoListEnum b : MerchantResourceInfoListEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
  public static final String JSON_PROPERTY_MERCHANT_RESOURCE_INFO_LIST = "merchantResourceInfoList";
  @javax.annotation.Nonnull
  private List<MerchantResourceInfoListEnum> merchantResourceInfoList = new ArrayList<>();

  public QueryMerchantResourceRequest() {
  }

  public QueryMerchantResourceRequest requestMerchantId(@javax.annotation.Nonnull String requestMerchantId) {
    
    this.requestMerchantId = requestMerchantId;
    return this;
  }

  /**
   * This is a merchantId of DANA
   * @return requestMerchantId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUEST_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRequestMerchantId() {
    return requestMerchantId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestMerchantId(@javax.annotation.Nonnull String requestMerchantId) {
    this.requestMerchantId = requestMerchantId;
  }

  public QueryMerchantResourceRequest merchantResourceInfoList(@javax.annotation.Nonnull List<MerchantResourceInfoListEnum> merchantResourceInfoList) {
    
    this.merchantResourceInfoList = merchantResourceInfoList;
    return this;
  }

  public QueryMerchantResourceRequest addMerchantResourceInfoListItem(MerchantResourceInfoListEnum merchantResourceInfoListItem) {
    if (this.merchantResourceInfoList == null) {
      this.merchantResourceInfoList = new ArrayList<>();
    }
    this.merchantResourceInfoList.add(merchantResourceInfoListItem);
    return this;
  }

  /**
   * This is a constant merchant resource info request, currently available for value of constant these: MERCHANT_DEPOSIT_BALANCE MERCHANT_AVAILABLE_BALANCE MERCHANT_TOTAL_BALANCE value for this request can't be empty or wrong constant info 
   * @return merchantResourceInfoList
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MERCHANT_RESOURCE_INFO_LIST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<MerchantResourceInfoListEnum> getMerchantResourceInfoList() {
    return merchantResourceInfoList;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_RESOURCE_INFO_LIST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMerchantResourceInfoList(@javax.annotation.Nonnull List<MerchantResourceInfoListEnum> merchantResourceInfoList) {
    this.merchantResourceInfoList = merchantResourceInfoList;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryMerchantResourceRequest queryMerchantResourceRequest = (QueryMerchantResourceRequest) o;
    return Objects.equals(this.requestMerchantId, queryMerchantResourceRequest.requestMerchantId) &&
        Objects.equals(this.merchantResourceInfoList, queryMerchantResourceRequest.merchantResourceInfoList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestMerchantId, merchantResourceInfoList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryMerchantResourceRequest {\n");
    sb.append("    requestMerchantId: ").append(toIndentedString(requestMerchantId)).append("\n");
    sb.append("    merchantResourceInfoList: ").append(toIndentedString(merchantResourceInfoList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
