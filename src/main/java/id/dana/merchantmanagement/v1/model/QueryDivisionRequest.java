/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.merchantmanagement.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * QueryDivisionRequest
 */
@JsonPropertyOrder({
  QueryDivisionRequest.JSON_PROPERTY_MERCHANT_ID,
  QueryDivisionRequest.JSON_PROPERTY_DIVISION_ID,
  QueryDivisionRequest.JSON_PROPERTY_DIVISION_ID_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class QueryDivisionRequest {
  public static final String JSON_PROPERTY_MERCHANT_ID = "merchantId";
  @javax.annotation.Nullable
  private String merchantId;

  public static final String JSON_PROPERTY_DIVISION_ID = "divisionId";
  @javax.annotation.Nonnull
  private String divisionId;

  /**
   * Division identifier type
   */
  public enum DivisionIdTypeEnum {
    INNER_ID(String.valueOf("INNER_ID")),
    
    EXTERNAL_ID(String.valueOf("EXTERNAL_ID")),
    
    /**
     * To handle empty string value
     */
    UNSPECIFIED(String.valueOf(""));

    private String value;

    DivisionIdTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DivisionIdTypeEnum fromValue(String value) {
      for (DivisionIdTypeEnum b : DivisionIdTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
  public static final String JSON_PROPERTY_DIVISION_ID_TYPE = "divisionIdType";
  @javax.annotation.Nonnull
  private DivisionIdTypeEnum divisionIdType;

  public QueryDivisionRequest() {
  }

  public QueryDivisionRequest merchantId(@javax.annotation.Nullable String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

  /**
   * Merchant identifier. Required when divisionIdType is EXTERNAL_ID
   * @return merchantId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMerchantId() {
    return merchantId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantId(@javax.annotation.Nullable String merchantId) {
    this.merchantId = merchantId;
  }

  public QueryDivisionRequest divisionId(@javax.annotation.Nonnull String divisionId) {
    
    this.divisionId = divisionId;
    return this;
  }

  /**
   * Division identifier or external identifier. Length depends on divisionIdType - INNER_ID (21 max), EXTERNAL_ID (64 max)
   * @return divisionId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DIVISION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDivisionId() {
    return divisionId;
  }


  @JsonProperty(JSON_PROPERTY_DIVISION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDivisionId(@javax.annotation.Nonnull String divisionId) {
    this.divisionId = divisionId;
  }

  public QueryDivisionRequest divisionIdType(@javax.annotation.Nonnull DivisionIdTypeEnum divisionIdType) {
    
    this.divisionIdType = divisionIdType;
    return this;
  }

  /**
   * Division identifier type
   * @return divisionIdType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DIVISION_ID_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DivisionIdTypeEnum getDivisionIdType() {
    return divisionIdType;
  }


  @JsonProperty(JSON_PROPERTY_DIVISION_ID_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDivisionIdType(@javax.annotation.Nonnull DivisionIdTypeEnum divisionIdType) {
    this.divisionIdType = divisionIdType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryDivisionRequest queryDivisionRequest = (QueryDivisionRequest) o;
    return Objects.equals(this.merchantId, queryDivisionRequest.merchantId) &&
        Objects.equals(this.divisionId, queryDivisionRequest.divisionId) &&
        Objects.equals(this.divisionIdType, queryDivisionRequest.divisionIdType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantId, divisionId, divisionIdType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryDivisionRequest {\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    divisionId: ").append(toIndentedString(divisionId)).append("\n");
    sb.append("    divisionIdType: ").append(toIndentedString(divisionIdType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
