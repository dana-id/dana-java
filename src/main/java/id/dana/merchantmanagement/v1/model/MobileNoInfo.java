/**
 * NOTE: This class is auto generated by DANA Indonesia.
 * Do not edit the class manually.
 */


package id.dana.merchantmanagement.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MobileNoInfo
 */
@JsonPropertyOrder({
  MobileNoInfo.JSON_PROPERTY_MOBILE_NO,
  MobileNoInfo.JSON_PROPERTY_MOBILE_ID,
  MobileNoInfo.JSON_PROPERTY_VERIFIED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class MobileNoInfo {
  public static final String JSON_PROPERTY_MOBILE_NO = "mobileNo";
  @javax.annotation.Nullable
  private String mobileNo;

  public static final String JSON_PROPERTY_MOBILE_ID = "mobileId";
  @javax.annotation.Nullable
  private String mobileId;

  /**
   * Verification status
   */
  public enum VerifiedEnum {
    TRUE(String.valueOf("true")),
    
    FALSE(String.valueOf("false")),
    
    /**
     * To handle empty string value
     */
    UNSPECIFIED(String.valueOf(""));

    private String value;

    VerifiedEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VerifiedEnum fromValue(String value) {
      for (VerifiedEnum b : VerifiedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
  public static final String JSON_PROPERTY_VERIFIED = "verified";
  @javax.annotation.Nullable
  private VerifiedEnum verified;

  public MobileNoInfo() {
  }

  public MobileNoInfo mobileNo(@javax.annotation.Nullable String mobileNo) {
    
    this.mobileNo = mobileNo;
    return this;
  }

  /**
   * Mobile number. Accepted formats: 0xxxxxxxx, 62xxxxxxx, 62-xxxxxxx, +62xxxxxx
   * @return mobileNo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOBILE_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMobileNo() {
    return mobileNo;
  }


  @JsonProperty(JSON_PROPERTY_MOBILE_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMobileNo(@javax.annotation.Nullable String mobileNo) {
    this.mobileNo = mobileNo;
  }

  public MobileNoInfo mobileId(@javax.annotation.Nullable String mobileId) {
    
    this.mobileId = mobileId;
    return this;
  }

  /**
   * Mobile ID
   * @return mobileId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOBILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMobileId() {
    return mobileId;
  }


  @JsonProperty(JSON_PROPERTY_MOBILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMobileId(@javax.annotation.Nullable String mobileId) {
    this.mobileId = mobileId;
  }

  public MobileNoInfo verified(@javax.annotation.Nullable VerifiedEnum verified) {
    
    this.verified = verified;
    return this;
  }

  /**
   * Verification status
   * @return verified
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VerifiedEnum getVerified() {
    return verified;
  }


  @JsonProperty(JSON_PROPERTY_VERIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerified(@javax.annotation.Nullable VerifiedEnum verified) {
    this.verified = verified;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MobileNoInfo mobileNoInfo = (MobileNoInfo) o;
    return Objects.equals(this.mobileNo, mobileNoInfo.mobileNo) &&
        Objects.equals(this.mobileId, mobileNoInfo.mobileId) &&
        Objects.equals(this.verified, mobileNoInfo.verified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mobileNo, mobileId, verified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MobileNoInfo {\n");
    sb.append("    mobileNo: ").append(toIndentedString(mobileNo)).append("\n");
    sb.append("    mobileId: ").append(toIndentedString(mobileId)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
